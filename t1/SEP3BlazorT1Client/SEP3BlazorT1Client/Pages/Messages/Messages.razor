@page "/Messages"
@inject NavigationManager NavigationManager; 
@inject AuthenticationStateProvider AuthenticationStateProvider; 
@inject IUserService UserService
@using SEP3BlazorT1Client.Models
@using Microsoft.AspNetCore.SignalR.Client
@using SEP3BlazorT1Client.Data
@using System.Text.Json
@if (_messages != null)
{
    @foreach (var message in _messages)
    {
        <p>@message.Content</p>
    }
}

@code {
    private IEnumerable<Message> _messages = new List<Message>();
    private HubConnection _connection;
    private User _sender;
    private User _receiver;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        _sender = await UserService.GetUserByEmailAsync(user.Identity.Name);
        _connection = new HubConnectionBuilder().WithUrl($"https://localhost:5001/chat?email={_sender.Email}").WithAutomaticReconnect().Build();
        _connection.On<string>("ReceiveMessage", ReceiveMessage);
        _connection.On<string>("ReceiveUserMessages", ReceiveUserMessages);
        await _connection.StartAsync();
        await _connection.InvokeAsync("GetMessages");
    }

    private void ReceiveMessage(string messageAsJson)
    {
        var messageReceived = JsonSerializer.Deserialize<Message>(messageAsJson);
    }

    private void ReceiveUserMessages(string messagesAsJson)
    {
        var receivedMessages = JsonSerializer.Deserialize<IEnumerable<Message>>(messagesAsJson);
        _messages = receivedMessages;
        StateHasChanged(); 
    }

}