@inject IResidenceService ResidenceService;
@page "/"
@using SEP3BlazorT1Client.Models
@using SEP3BlazorT1Client.Data
@using Authentication


@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager


<div class="mat-layout-grid">
    <div class="mat-layout-grid-inner">
        <div class="mat-layout-grid-cell"></div>
        <div class="mat-layout-grid-cell">
            <MatPaper Elevation="8" Rounded="true" class="d-flex justify-content-center">
               
                    <div class="d-flex flex-column">
                        <div class="d-flex justify-content-center">
                           <img class="my-4" width="120" height="120" src="https://cdn.pixabay.com/photo/2017/03/21/02/00/user-2160923_1280.png" alt="">    
                        </div>

                        <MatTextField @bind-Value="@email" Label="Email" Outlined="true" ></MatTextField>
                        <MatTextField @bind-Value="@password" Dense="true" Label="Password" Outlined="true"></MatTextField>
                        
                        <MatDivider class="my-2"></MatDivider>
                        
                        <MatCheckbox @bind-Value="@loginAsGuest" Label="@(getLabel(loginAsGuest))"></MatCheckbox>
                        <div hidden="@loginAsGuest" class="justify-content-center" >
                        <MatTextField @bind-Value="@studentNumber" Label="Student number" Outlined="true" ></MatTextField>    
                        </div>
                        
                        
                        <p style="color: red">@ErrorMessage</p>
                        <MatButton Raised="true" OnClick="@(() => PerformLogin())">Log in</MatButton>
                        <MatDivider class="my-1"></MatDivider>
                        <MatButton class="my-1" Link="/registerhost">Don't have an account? register here</MatButton>
                    </div>
            </MatPaper>
        </div>
        <div class="mat-layout-grid-cell"></div>
    </div>
</div>



@code
{
    private string email;
    private string password;
    private string ErrorMessage;
    private bool loginAsGuest = false;
    private string studentNumber;

    public async Task PerformLogin()
    {
        Console.WriteLine("Loggin in");
        ErrorMessage = "";
        try
        {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(email, password);
            email = "";
            password = "";
            NavigationManager.NavigateTo("/BuildingsOverview");
        } catch (Exception e) {
            ErrorMessage = e.Message;
            Console.WriteLine(e.Message);
        }
    }
    
    string getLabel(bool val)
    {
        return !val ? "Login as guest!" : "Login as host";
    }


}