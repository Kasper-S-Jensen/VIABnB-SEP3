@inject IResidenceService ResidenceService;
@page "/"
@using SEP3BlazorT1Client.Models
@using SEP3BlazorT1Client.Data


<h1>Proof of concept</h1>
<span>T1 --> T2 REST API --> T3 SOAP API with Postgres DB
</span>

<div>
    
    <p>Fetched Message: </p>
    @if (_residence != null)
    {
    <p>@_residence.ToString()</p>
    }
    <Input type="number" @oninput="(e) => { _id = Int32.Parse(e.Value.ToString()); }"/>
    <button type="submit" @onclick="CreateNewResidence" class="btn btn-primary">
        FETCH CONCEPT MESSAGE
    </button>
</div>

@code
{
    private int? _id;
    private Residence _residence;

    protected override async Task OnInitializedAsync()
    {
        _id = 0;
    }

    private async Task CreateNewResidence()
    {
        Residence newResidence = new Residence()
        {
            Address = new Address()
            {
                CityName = "420City", 
                HouseNumber ="420", 
                Id= 420, 
                StreetName = "420 Street",
                StreetNumber = "420",
                ZipCode=420
            },
            AvailableFrom = DateTime.ParseExact("07/11/2021", "dd/MM/yyyy", null),
            AvailableTo = DateTime.ParseExact("07/12/2021", "dd/MM/yyyy", null), 
            AverageRating = 5, 
            Description ="420 des",
            Facilities = new List<Facility>(), 
            Id = 420, 
            ImageUrl = "420", 
            IsAvailable = false, 
            PricePerNight = 2000,
            Rules = new List<Rule>(), 
            Type = "420 blaze"
            
        };
        var result = await ResidenceService.CreateResidenceAsync(newResidence); 
        System.Console.WriteLine(result.Id);
        _residence = result; 
    }
    private async Task FetchConceptMessage()
    {
        int myInt = 0; 
        if (_id == null)
        {
            myInt = 0; 
        }
        else
        {
            myInt = (int) _id;
        }
       _residence = await ResidenceService.GetResidenceAsync(1);
        Console.WriteLine("Fetched");
        Console.WriteLine(_residence.ToString());
    }
}
